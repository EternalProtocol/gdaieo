import{aJ as l,e7 as w,gL as b,c9 as y,aS as A,e2 as g,c2 as h,c1 as F,af as E,dJ as N,c7 as m,c8 as P,cI as I,gM as f,gN as R}from"./index-DECWOKd0.js";function M(n){const{abi:r,data:e}=n,a=l(e,0,4),t=r.find(o=>o.type==="function"&&a===w(b(o)));if(!t)throw new y(a,{docsPath:"/docs/contract/decodeFunctionData"});return{functionName:t.name,args:"inputs"in t&&t.inputs&&t.inputs.length>0?A(t.inputs,l(e,4)):void 0}}const u="/docs/contract/encodeErrorResult";function p(n){const{abi:r,errorName:e,args:a}=n;let t=r[0];if(e){const c=g({abi:r,args:a,name:e});if(!c)throw new h(e,{docsPath:u});t=c}if(t.type!=="error")throw new h(void 0,{docsPath:u});const o=b(t),s=w(o);let i="0x";if(a&&a.length>0){if(!t.inputs)throw new F(t.name,{docsPath:u});i=E(t.inputs,a)}return N([s,i])}const d="/docs/contract/encodeFunctionResult";function q(n){const{abi:r,functionName:e,result:a}=n;let t=r[0];if(e){const s=g({abi:r,name:e});if(!s)throw new m(e,{docsPath:d});t=s}if(t.type!=="function")throw new m(void 0,{docsPath:d});if(!t.outputs)throw new P(t.name,{docsPath:d});const o=(()=>{if(t.outputs.length===0)return[];if(t.outputs.length===1)return[a];if(Array.isArray(a))return a;throw new I(a)})();return E(t.outputs,o)}const x="x-batch-gateway:true";async function G(n){const{data:r,ccipRequest:e}=n,{args:[a]}=M({abi:f,data:r}),t=[],o=[];return await Promise.all(a.map(async(s,i)=>{try{o[i]=s.urls.includes(x)?await G({data:s.data,ccipRequest:e}):await e(s),t[i]=!1}catch(c){t[i]=!0,o[i]=H(c)}})),q({abi:f,functionName:"query",result:[t,o]})}function H(n){return n.name==="HttpRequestError"&&n.status?p({abi:f,errorName:"HttpError",args:[n.status,n.shortMessage]}):p({abi:[R],errorName:"Error",args:["shortMessage"in n?n.shortMessage:n.message]})}export{q as a,G as b,M as d,p as e,x as l};
